from aiogram import types

from keyboards.default import keyboard_menu
from loader import dp
from filters import IsAdmin
from keyboards.inline.inline_kb_menu import *
from keyboards.default.keyboard_menu import *
from utils.db_api.db_asyncpg import *
from data.config import *
from filters import IsAdmin


@dp.message_handler(IsAdmin(), commands=['start'])
async def command_start(message: types.Message) -> None:
    print(message.chat.id)
    await message.answer(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.full_name},  –≤—ã –ø–æ–ø–∞–ª–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å!',
                         reply_markup=keyboard_menu.admin)


@dp.message_handler(commands=['start'])
async def command_strt(message: types.Message) -> None:
    #print(message.chat.id)
    exists = await user_exists(message.from_user.id)
    if not exists:
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é!üëã \n'
                             f'–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä',
                             reply_markup=keyboard_menu.phone,
                             parse_mode="HTML")
    else:
        await message.answer('–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ', reply_markup=keyboard_menu.main)
